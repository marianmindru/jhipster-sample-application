entity Users {
	id Long,
	cnpCuiClient String,
	numeAsigurat String,
    prenumeAsigurat String,
    tipAsigurat Asigurat,
    telefon String,
    email String,
	imCode String
}

entity Oferte {
	id Long,
	codOferta String,
    dataStartPolita LocalDate,
    dataEnd LocalDate,
    stareOferta StareOferta,
    idProdus String,
    valuta String,
    sumaPlata String,
    idAgent String,
    idUser Long
}

entity Polite {
	id Long,
	numarPolita String,
    seriePolita String,
    codOferta String,
    idOferta Long,
    dataStart LocalDate,
    dataEnd LocalDate,
    perioada Integer,
    idProdus String,
    valuta String,
    sumaPlata String,
    idAgent String,
    idUser Long
}

entity Tranzactii {
	id Long,
    codOferta String,
    idOferta Long,
	numarPolita String,
    seriePolita String,
    idPolita Long,
    sumaPlatita String,
    statusPlata StatusPlata,
    dataPlata LocalDate,
    valuta String,
    idUser Long,
    referintaIng String
}


enum Asigurat {
    F, J
}
enum StareOferta {
    ACTIV, INACTIV
}

enum StatusPlata {
	NEW, WAITING, CONFIRMED
}

relationship ManyToOne {
	Oferte to Users
}

relationship ManyToOne {
	Polite to Users
}

relationship ManyToOne {
	Tranzactii to Users
}

relationship OneToOne {
	Tranzactii to Oferte
}

relationship OneToOne {
	Tranzactii to Polite
}

// Set pagination options
//paginate Oferte, Polite, Tranzactii with infinite-scroll
//paginate Users with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
